networks:
  flotta:

volumes:
  db-data:
  server-data:
  client-1-data:
  client-2-data:
  node-1-data:
  node-2-data:

services:

  repository:
    image: idsia.flotta.repository
    build:
      context: ../../
      dockerfile: tests/integration/Dockerfile.pypirepo
    container_name: repository
    networks:
      - flotta
    entrypoint: pypi-server run -p 80 --log-stream stdout /packages

  database:
    image: postgres
    container_name: database
    environment:
      - POSTGRES_USER=${DATABASE_USER?Missing DATABASE_USER for database}
      - POSTGRES_PASSWORD=${DATABASE_PASS?Missing DATABASE_PASS for database}
      - POSTGRES_DB=${DATABASE_SCHEMA?Missing DATABASE_SCHEMA for database}
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - flotta
    ports:
     - 15432:5432

  server: 
    image: idsia.flotta
    build:
      context: ../../
      dockerfile: ./Dockerfile
    container_name: server
    restart: unless-stopped
    environment:
      - flotta_NODE_HOST=server
      - DATABASE_HOST=database
      - DATABASE_PORT=5432
      - DATABASE_USER=${DATABASE_USER?Missing DATABASE_USER for server}
      - DATABASE_PASSWORD=${DATABASE_PASS?Missing DATABASE_PASS for server}
      - DATABASE_SCHEMA=${DATABASE_SCHEMA?Missing DATABASE_SCHEMA for server}
    volumes:
      - server-data:/flotta/storage
      - ./conf/config.server.yaml:/flotta/config.yaml
      - /dev/shm:/dev/shm # this is for ray
    networks:
      - flotta
    ports:
      - 1456:1456
    depends_on:
      - database

  client1:
    image: idsia.flotta
    container_name: client1
    restart: unless-stopped
    environment:
      - flotta_NODE_HOST=server
    volumes: 
      - client-1-data:/flotta/storage
      - ./conf/config.client.1.yaml:/flotta/config.yaml
      - ./data:/flotta/data
      - /dev/shm:/dev/shm # this is for ray
    networks:
      - flotta
    depends_on:
      - server

  client2:
    image: idsia.flotta
    container_name: client2
    restart: unless-stopped
    environment:
      - flotta_NODE_HOST=server
    volumes: 
      - client-2-data:/flotta/storage
      - ./conf/config.client.2.yaml:/flotta/config.yaml
      - ./data:/flotta/data
      - /dev/shm:/dev/shm # this is for ray
    networks:
      - flotta
    depends_on:
      - server

  node1:
    image: idsia.flotta
    container_name: node1
    restart: unless-stopped
    environment:
      - flotta_NODE_HOST=node1
      - flotta_JOIN_HOST=server
    volumes: 
      - node-1-data:/flotta/storage
      - ./conf/config.node.1.yaml:/flotta/config.yaml
      - ./data:/flotta/data
      - /dev/shm:/dev/shm # this is for ray
    networks:
      - flotta
    depends_on:
      - server
  
  node2:
    image: idsia.flotta
    container_name: node2
    restart: unless-stopped
    environment:
      - flotta_NODE_HOST=node2
      - flotta_JOIN_HOST=server
    volumes: 
      - node-2-data:/flotta/storage
      - ./conf/config.node.2.yaml:/flotta/config.yaml
      - ./data:/flotta/data
      - /dev/shm:/dev/shm # this is for ray
    networks:
      - flotta
    depends_on:
      - server

  workbench:
    image: python:3.10
    container_name: workbench
    environment:
      - SERVER=http://server:1456
      - REPOSITORY_HOST=repository
      - PROJECT_ID=${PROJECT_ID}
    volumes:
      - ./tests:/tests
      - ./data:/data
    entrypoint: /tests/init.sh
    networks:
      - flotta
    depends_on:
      - repository
      - server
      - client1
      - client2
